/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2004-2017 Oracle and/or its affiliates. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License.  You can
 * obtain a copy of the License at
 * https://oss.oracle.com/licenses/CDDL+GPL-1.1
 * or LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at LICENSE.txt.
 *
 * GPL Classpath Exception:
 * Oracle designates this particular file as subject to the "Classpath"
 * exception as provided by Oracle in the GPL Version 2 section of the License
 * file that accompanied this code.
 *
 * Modifications:
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyright [year] [name of copyright owner]"
 *
 * Contributor(s):
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */

// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (2.0, build R6)
// Generated source version: 2.0

package client.dispatch.wsdl_hello_lit_asyncpoll.server;

import javax.jws.WebService;
import javax.xml.ws.soap.SOAPFaultException;
import javax.xml.namespace.QName;

@WebService(
    serviceName="Hello_Service",
    endpointInterface="client.dispatch.wsdl_hello_lit_asyncpoll.server.Hello"
)
public class Hello_PortType_Impl implements client.dispatch.wsdl_hello_lit_asyncpoll.server.Hello, java.rmi.Remote {

     private static final ObjectFactory of = new ObjectFactory();

    public client.dispatch.wsdl_hello_lit_asyncpoll.server.HelloResponse hello(client.dispatch.wsdl_hello_lit_asyncpoll.server.Hello_Type parameters) {

        //System.out.println("Hello_PortType_Impl received: " + .getArgument() +
        //    ", " + req.getExtra());
        try{
        HelloResponse resp = of.createHelloResponse();
        resp.setArgument(parameters.getArgument());
        resp.setExtra(parameters.getExtra());
        return resp;
        }catch(Exception e)
        {
         throw new SOAPFaultException(null);
        }

    }

    public client.dispatch.wsdl_hello_lit_asyncpoll.server.HelloResponseException helloException(client.dispatch.wsdl_hello_lit_asyncpoll.server.HelloException parameters)  {

        System.out.println("Hello_PortType_Impl received: " + parameters.getArgument() +
            ", " + parameters.getExtra());

        HelloResponseException resp = of.createHelloResponseException();
        return resp;

    }

    public client.dispatch.wsdl_hello_lit_asyncpoll.server.VoidTestResponse voidTest(client.dispatch.wsdl_hello_lit_asyncpoll.server.VoidTest parameters) {
            return of.createVoidTestResponse();

    }

}
